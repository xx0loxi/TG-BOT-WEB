import os
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, types
from aiogram.types import WebAppInfo
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram import F
from aiogram.utils import executor

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv()

TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
WEBAPP_URL = os.getenv('WEBAPP_URL')

if not TOKEN or not WEBAPP_URL:
    raise RuntimeError("–ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ TELEGRAM_BOT_TOKEN –∏–ª–∏ WEBAPP_URL –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN, parse_mode="HTML")
dp = Dispatcher()

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(F.text == "/start")
async def cmd_start(message: types.Message):
    kb = ReplyKeyboardBuilder()
    kb.button(
        text="üí¨ –û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç",
        web_app=WebAppInfo(url=WEBAPP_URL)
    )
    kb.adjust(1)
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-—á–∞—Ç —Å –ò–ò:",
        reply_markup=kb.as_markup(resize_keyboard=True)
    )

# –ó–∞–ø—É—Å–∫ –ø–æ–ª–ª–∏–Ω–≥–∞
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
